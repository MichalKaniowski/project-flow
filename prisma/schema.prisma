generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id
  displayName  String
  email        String   @unique
  googleId     String?  @unique
  avatarUrl    String?
  passwordHash String?
  createdAt    DateTime @default(now())

  projects            Project[]
  sessions            Session[]
  passwordResetTokens PasswordResetToken[]

  @@map("users")
}

model Session {
  id        String   @id
  expiresAt DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}

model Project {
  id         String   @id @default(cuid())
  name       String
  abstract   String
  targetUser String
  pinned     Boolean  @default(false)
  icon       String?
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())

  userId   String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks    Task[]
  statuses Status[]
  tags     Tag[]

  @@map("projects")
}

model Status {
  id   String @id @default(cuid())
  name String

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  tasks     Task[]

  @@unique([name, projectId])
  @@map("statuses")
}

model Tag {
  id      String @id @default(cuid())
  name    String
  styleId String

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  tasks     Task[]

  @@unique([name, projectId])
  @@map("tags")
}

enum Priority {
  Low
  Medium
  High
}

enum Type {
  Feature
  Bug
  Task
}

model Task {
  id          String   @id @default(cuid())
  title       String
  assignee    String
  targetDate  DateTime
  priority    Priority
  type        Type
  description String?

  statusId  String
  status    Status  @relation(fields: [statusId], references: [id], onDelete: Cascade)
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  tags      Tag[]

  @@map("tasks")
}
